# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import helper.generated.scapp_pb2 as scapp__pb2


class StudentServicesStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreateStudent = channel.unary_unary(
                '/StudentServices/CreateStudent',
                request_serializer=scapp__pb2.CreateStudentRequest.SerializeToString,
                response_deserializer=scapp__pb2.CreateStudentResponse.FromString,
                )
        self.UpdateStudent = channel.unary_unary(
                '/StudentServices/UpdateStudent',
                request_serializer=scapp__pb2.UpdateStudentRequest.SerializeToString,
                response_deserializer=scapp__pb2.UpdateStudentResponse.FromString,
                )
        self.GetCourse = channel.unary_unary(
                '/StudentServices/GetCourse',
                request_serializer=scapp__pb2.GetCourseRequest.SerializeToString,
                response_deserializer=scapp__pb2.GetCoursesResponse.FromString,
                )
        self.GetStudentGPA = channel.unary_unary(
                '/StudentServices/GetStudentGPA',
                request_serializer=scapp__pb2.GetStudentGPARequest.SerializeToString,
                response_deserializer=scapp__pb2.GetStudentGPAResponse.FromString,
                )
        self.ResetStudentData = channel.unary_unary(
                '/StudentServices/ResetStudentData',
                request_serializer=scapp__pb2.ResetStudentDataRequest.SerializeToString,
                response_deserializer=scapp__pb2.ResetDataStoreResponse.FromString,
                )


class StudentServicesServicer(object):
    """Missing associated documentation comment in .proto file."""

    def CreateStudent(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateStudent(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetCourse(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetStudentGPA(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ResetStudentData(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_StudentServicesServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreateStudent': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateStudent,
                    request_deserializer=scapp__pb2.CreateStudentRequest.FromString,
                    response_serializer=scapp__pb2.CreateStudentResponse.SerializeToString,
            ),
            'UpdateStudent': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateStudent,
                    request_deserializer=scapp__pb2.UpdateStudentRequest.FromString,
                    response_serializer=scapp__pb2.UpdateStudentResponse.SerializeToString,
            ),
            'GetCourse': grpc.unary_unary_rpc_method_handler(
                    servicer.GetCourse,
                    request_deserializer=scapp__pb2.GetCourseRequest.FromString,
                    response_serializer=scapp__pb2.GetCoursesResponse.SerializeToString,
            ),
            'GetStudentGPA': grpc.unary_unary_rpc_method_handler(
                    servicer.GetStudentGPA,
                    request_deserializer=scapp__pb2.GetStudentGPARequest.FromString,
                    response_serializer=scapp__pb2.GetStudentGPAResponse.SerializeToString,
            ),
            'ResetStudentData': grpc.unary_unary_rpc_method_handler(
                    servicer.ResetStudentData,
                    request_deserializer=scapp__pb2.ResetStudentDataRequest.FromString,
                    response_serializer=scapp__pb2.ResetDataStoreResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'StudentServices', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class StudentServices(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def CreateStudent(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/StudentServices/CreateStudent',
            scapp__pb2.CreateStudentRequest.SerializeToString,
            scapp__pb2.CreateStudentResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateStudent(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/StudentServices/UpdateStudent',
            scapp__pb2.UpdateStudentRequest.SerializeToString,
            scapp__pb2.UpdateStudentResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetCourse(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/StudentServices/GetCourse',
            scapp__pb2.GetCourseRequest.SerializeToString,
            scapp__pb2.GetCoursesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetStudentGPA(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/StudentServices/GetStudentGPA',
            scapp__pb2.GetStudentGPARequest.SerializeToString,
            scapp__pb2.GetStudentGPAResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ResetStudentData(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/StudentServices/ResetStudentData',
            scapp__pb2.ResetStudentDataRequest.SerializeToString,
            scapp__pb2.ResetDataStoreResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class CourseServicesStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreateCourse = channel.unary_unary(
                '/CourseServices/CreateCourse',
                request_serializer=scapp__pb2.CreateCourseRequest.SerializeToString,
                response_deserializer=scapp__pb2.CreateCourseResponse.FromString,
                )
        self.UpdateCourse = channel.unary_unary(
                '/CourseServices/UpdateCourse',
                request_serializer=scapp__pb2.UpdateCourseRequest.SerializeToString,
                response_deserializer=scapp__pb2.UpdateCourseResponse.FromString,
                )
        self.AddStudent = channel.unary_unary(
                '/CourseServices/AddStudent',
                request_serializer=scapp__pb2.AddStudentToCourseRequest.SerializeToString,
                response_deserializer=scapp__pb2.AddStudentToCourseResponse.FromString,
                )
        self.RemoveStudent = channel.unary_unary(
                '/CourseServices/RemoveStudent',
                request_serializer=scapp__pb2.RemoveStudentFromCourseRequest.SerializeToString,
                response_deserializer=scapp__pb2.RemoveStudentFromCourseResponse.FromString,
                )
        self.CalculateAve = channel.unary_unary(
                '/CourseServices/CalculateAve',
                request_serializer=scapp__pb2.CalculateCourseAverageRequest.SerializeToString,
                response_deserializer=scapp__pb2.CalculateCourseAverageResponse.FromString,
                )
        self.GetStudent = channel.unary_unary(
                '/CourseServices/GetStudent',
                request_serializer=scapp__pb2.GetStudentsRequest.SerializeToString,
                response_deserializer=scapp__pb2.GetStudentsResponse.FromString,
                )
        self.SetStudentGrade = channel.unary_unary(
                '/CourseServices/SetStudentGrade',
                request_serializer=scapp__pb2.SetStudentGradeRequest.SerializeToString,
                response_deserializer=scapp__pb2.SetStudentGradeResponse.FromString,
                )
        self.GetStudentGrade = channel.unary_unary(
                '/CourseServices/GetStudentGrade',
                request_serializer=scapp__pb2.GetStudentGradeRequest.SerializeToString,
                response_deserializer=scapp__pb2.GetStudentGradeResponse.FromString,
                )
        self.ResetCourseData = channel.unary_unary(
                '/CourseServices/ResetCourseData',
                request_serializer=scapp__pb2.ResetCourseDataRequest.SerializeToString,
                response_deserializer=scapp__pb2.ResetDataStoreResponse.FromString,
                )


class CourseServicesServicer(object):
    """Missing associated documentation comment in .proto file."""

    def CreateCourse(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateCourse(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AddStudent(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RemoveStudent(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CalculateAve(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetStudent(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetStudentGrade(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetStudentGrade(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ResetCourseData(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_CourseServicesServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreateCourse': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateCourse,
                    request_deserializer=scapp__pb2.CreateCourseRequest.FromString,
                    response_serializer=scapp__pb2.CreateCourseResponse.SerializeToString,
            ),
            'UpdateCourse': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateCourse,
                    request_deserializer=scapp__pb2.UpdateCourseRequest.FromString,
                    response_serializer=scapp__pb2.UpdateCourseResponse.SerializeToString,
            ),
            'AddStudent': grpc.unary_unary_rpc_method_handler(
                    servicer.AddStudent,
                    request_deserializer=scapp__pb2.AddStudentToCourseRequest.FromString,
                    response_serializer=scapp__pb2.AddStudentToCourseResponse.SerializeToString,
            ),
            'RemoveStudent': grpc.unary_unary_rpc_method_handler(
                    servicer.RemoveStudent,
                    request_deserializer=scapp__pb2.RemoveStudentFromCourseRequest.FromString,
                    response_serializer=scapp__pb2.RemoveStudentFromCourseResponse.SerializeToString,
            ),
            'CalculateAve': grpc.unary_unary_rpc_method_handler(
                    servicer.CalculateAve,
                    request_deserializer=scapp__pb2.CalculateCourseAverageRequest.FromString,
                    response_serializer=scapp__pb2.CalculateCourseAverageResponse.SerializeToString,
            ),
            'GetStudent': grpc.unary_unary_rpc_method_handler(
                    servicer.GetStudent,
                    request_deserializer=scapp__pb2.GetStudentsRequest.FromString,
                    response_serializer=scapp__pb2.GetStudentsResponse.SerializeToString,
            ),
            'SetStudentGrade': grpc.unary_unary_rpc_method_handler(
                    servicer.SetStudentGrade,
                    request_deserializer=scapp__pb2.SetStudentGradeRequest.FromString,
                    response_serializer=scapp__pb2.SetStudentGradeResponse.SerializeToString,
            ),
            'GetStudentGrade': grpc.unary_unary_rpc_method_handler(
                    servicer.GetStudentGrade,
                    request_deserializer=scapp__pb2.GetStudentGradeRequest.FromString,
                    response_serializer=scapp__pb2.GetStudentGradeResponse.SerializeToString,
            ),
            'ResetCourseData': grpc.unary_unary_rpc_method_handler(
                    servicer.ResetCourseData,
                    request_deserializer=scapp__pb2.ResetCourseDataRequest.FromString,
                    response_serializer=scapp__pb2.ResetDataStoreResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'CourseServices', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class CourseServices(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def CreateCourse(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/CourseServices/CreateCourse',
            scapp__pb2.CreateCourseRequest.SerializeToString,
            scapp__pb2.CreateCourseResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateCourse(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/CourseServices/UpdateCourse',
            scapp__pb2.UpdateCourseRequest.SerializeToString,
            scapp__pb2.UpdateCourseResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AddStudent(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/CourseServices/AddStudent',
            scapp__pb2.AddStudentToCourseRequest.SerializeToString,
            scapp__pb2.AddStudentToCourseResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RemoveStudent(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/CourseServices/RemoveStudent',
            scapp__pb2.RemoveStudentFromCourseRequest.SerializeToString,
            scapp__pb2.RemoveStudentFromCourseResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CalculateAve(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/CourseServices/CalculateAve',
            scapp__pb2.CalculateCourseAverageRequest.SerializeToString,
            scapp__pb2.CalculateCourseAverageResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetStudent(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/CourseServices/GetStudent',
            scapp__pb2.GetStudentsRequest.SerializeToString,
            scapp__pb2.GetStudentsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetStudentGrade(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/CourseServices/SetStudentGrade',
            scapp__pb2.SetStudentGradeRequest.SerializeToString,
            scapp__pb2.SetStudentGradeResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetStudentGrade(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/CourseServices/GetStudentGrade',
            scapp__pb2.GetStudentGradeRequest.SerializeToString,
            scapp__pb2.GetStudentGradeResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ResetCourseData(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/CourseServices/ResetCourseData',
            scapp__pb2.ResetCourseDataRequest.SerializeToString,
            scapp__pb2.ResetDataStoreResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
